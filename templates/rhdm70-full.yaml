---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Application template for Red Hat Decision Manager 7.0 applications with persistent storage.
    iconClass: icon-jboss
    tags: rhdm,jboss,xpaas
    version: 1.4.0
    openshift.io/display-name: Red Hat Decision Manager 7.0 applications (Persistent with https)
  name: rhdm70-full-persistent
labels:
  template: rhdm70-full-persistent
  xpaas: 1.4.0
message: A new persistent Decision Manager applications have been created in your project.
  The username/password for accessing the KIE Server / Decision Central interface is ${KIE_ADMIN_USER}/${KIE_ADMIN_PWD}.
  Please be sure to create the "decisioncentral-service-account" and "kieserver-service-account" service accounts
  and the secrets named "${DECISION_CENTRAL_HTTPS_SECRET}" and "${KIE_SERVER_HTTPS_SECRET}" containing the
  ${DECISION_CENTRAL_HTTPS_KEYSTORE} and ${KIE_SERVER_HTTPS_KEYSTORE}files used for serving secure content.
parameters:
- displayName: Application Name
  description: The name for the application.
  name: APPLICATION_NAME
  value: myapp
  required: true
- displayName: EAP Admin User
  description: EAP administrator username
  name: ADMIN_USERNAME
  value: eapadmin
  required: false
- displayName: EAP Admin Password
  description: EAP administrator password
  name: ADMIN_PASSWORD
  from: "[a-zA-Z]{6}[0-9]{1}!"
  generate: expression
  required: false
- displayName: KIE Admin User
  description: KIE administrator username
  name: KIE_ADMIN_USER
  value: adminUser
  required: false
- displayName: KIE Admin Password
  description: KIE administrator password
  name: KIE_ADMIN_PWD
  from: "[a-zA-Z]{6}[0-9]{1}!"
  generate: expression
  required: false
- displayName: KIE Server Controller User
  description: KIE server controller username (Sets the org.kie.server.controller.user system property)
  name: KIE_SERVER_CONTROLLER_USER
  value: controllerUser
  required: false
- displayName: KIE Server Controller Password
  description: KIE server controller password (Sets the org.kie.server.controller.pwd system property)
  name: KIE_SERVER_CONTROLLER_PWD
  from: "[a-zA-Z]{6}[0-9]{1}!"
  generate: expression
  required: false
- displayName: KIE Server User
  description: KIE execution server username (Sets the org.kie.server.user system property)
  name: KIE_SERVER_USER
  value: executionUser
  required: false
- displayName: KIE Server Password
  description: KIE execution server password (Sets the org.kie.server.pwd system property)
  name: KIE_SERVER_PWD
  from: "[a-zA-Z]{6}[0-9]{1}!"
  generate: expression
  required: false
- displayName: KIE Server Bypass Auth User
  description: KIE execution server bypass auth user (Sets the org.kie.server.bypass.auth.user system property)
  name: KIE_SERVER_BYPASS_AUTH_USER
  value: 'false'
  required: false
- displayName: KIE MBeans
  description: KIE execution server mbeans enabled/disabled (Sets the kie.mbeans and kie.scanner.mbeans system properties)
  name: KIE_MBEANS
  value: enabled
  required: false
- displayName: Drools Server Filter Classes
  description: KIE execution server class filtering (Sets the org.drools.server.filter.classes system property)
  name: DROOLS_SERVER_FILTER_CLASSES
  value: 'true'
  required: false
- displayName: Decision Central Custom http Route Hostname
  description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-rhdmcentr-<project>.<default-domain-suffix>'
  name: DECISION_CENTRAL_HOSTNAME_HTTP
  value: ''
  required: false
- displayName: Decision Central Custom https Route Hostname
  description: 'Custom hostname for https service route.  Leave blank for default
    hostname, e.g.: secure-<application-name>-rhdmcentr-<project>.<default-domain-suffix>'
  name: DECISION_CENTRAL_HOSTNAME_HTTPS
  value: ''
  required: false
- displayName: Execution Server Custom http Route Hostname
  description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-kieserver-<project>.<default-domain-suffix>'
  name: EXECUTION_SERVER_HOSTNAME_HTTP
  value: ''
  required: false
- displayName: Execution Server Custom https Route Hostname
  description: 'Custom hostname for https service route.  Leave blank for default
    hostname, e.g.: secure-<application-name>-kieserver-<project>.<default-domain-suffix>'
  name: EXECUTION_SERVER_HOSTNAME_HTTPS
  value: ''
  required: false
- displayName: Decision Central Server Keystore Secret Name
  description: The name of the secret containing the keystore file
  name: DECISION_CENTRAL_HTTPS_SECRET
  value: decisioncentral-app-secret
  required: false
- displayName: Decision Central Server Keystore Filename
  description: The name of the keystore file within the secret
  name: DECISION_CENTRAL_HTTPS_KEYSTORE
  value: keystore.jks
  required: false
- displayName: Decision Central Server Certificate Name
  description: The name associated with the server certificate
  name: DECISION_CENTRAL_HTTPS_NAME
  value: jboss
  required: false
- displayName: Decision Central Server Keystore Password
  description: The password for the keystore and certificate
  name: DECISION_CENTRAL_HTTPS_PASSWORD
  value: mykeystorepass
  required: false
- displayName: KIE Server Keystore Secret Name
  description: The name of the secret containing the keystore file
  name: KIE_SERVER_HTTPS_SECRET
  value: kieserver-app-secret
  required: false
- displayName: KIE Server Keystore Filename
  description: The name of the keystore file within the secret
  name: KIE_SERVER_HTTPS_KEYSTORE
  value: keystore.jks
  required: false
- displayName: KIE Server Certificate Name
  description: The name associated with the server certificate
  name: KIE_SERVER_HTTPS_NAME
  value: jboss
  required: false
- displayName: KIE Server Keystore Password
  description: The password for the keystore and certificate
  name: KIE_SERVER_HTTPS_PASSWORD
  value: mykeystorepass
  required: false
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
  required: true
- displayName: Maven repository URL
  description: Fully qualified URL to a Maven repository. If unspecified, will fall back to Decision Central service.
  name: MAVEN_REPO_URL
  required: false
- displayName: Maven repository username
  description: Username to access the Maven repository. If using Decision Central, will have to match KIE_ADMIN_USER.
    Default is "adminUser".
  name: MAVEN_REPO_USERNAME
  value: adminUser
  required: false
- displayName: Maven repository password
  description: Password to access the Maven repository. If using Decision Central, will have to match KIE_ADMIN_PWD.
    No default specified.
  name: MAVEN_REPO_PASSWORD
  required: false
- displayName: Decision Central Volume Capacity
  description: Size of the persistent storage for Decision Central's runtime data.
  name: DECISION_CENTRAL_VOLUME_CAPACITY
  value: 512Mi
  required: true
- displayName: A-MQ Protocols
  description: Protocols to configure, separated by commas. Allowed values are `openwire`, `amqp`, `stomp` and `mqtt`.
  name: MQ_PROTOCOL
  value: openwire
  required: false
- displayName: Queues
  description: Queue names, separated by commas. These queues will be automatically created when the broker starts. If left empty, queues will be still created dynamically.
  name: MQ_QUEUES
  value: ''
  required: false
- displayName: Topics
  description: Topic names, separated by commas. These topics will be automatically created when the broker starts. If left empty, topics will be still created dynamically.
  name: MQ_TOPICS
  value: ''
  required: false
- displayName: A-MQ Serializable Packages
  description: List of packages that are allowed to be serialized for use in ObjectMessage, separated by commas. If your app doesn't use ObjectMessages, leave this blank. This is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html
  name: MQ_SERIALIZABLE_PACKAGES
  value: ''
  required: false
- displayName: A-MQ Username
  description: User name for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.
  name: MQ_USERNAME
  from: "user[a-zA-Z0-9]{3}"
  generate: expression
  required: false
- displayName: A-MQ Password
  description: Password for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.
  name: MQ_PASSWORD
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: false
- displayName: A-MQ Mesh Discovery Type
  description: The discovery agent type to use for discovering mesh endpoints.  'dns' will use OpenShift's DNS service to resolve endpoints.  'kube' will use Kubernetes REST API to resolve service endpoints.  If using 'kube' the service account for the pod must have the 'view' role, which can be added via 'oc policy add-role-to-user view system:serviceaccount:<namespace>:default' where <namespace> is the project namespace.
  name: AMQ_MESH_DISCOVERY_TYPE
  value: dns
  required: false
- displayName: A-MQ Storage Limit
  description: The A-MQ storage usage limit
  name: AMQ_STORAGE_USAGE_LIMIT
  value: 100 gb
  required: false
- displayName: Queue Memory Limit
  description: The queue memory limit (default is 1mb)
  name: AMQ_QUEUE_MEMORY_LIMIT
  value: ''
  required: false
- displayName: Java opts append
  description: Decission central (or Business central) properties for configuration that is not include in environmnent variables.
  name: JAVA_OPTS_APPEND
  value: ''
  required: false
objects:
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 5672
      targetPort: 5672
    selector:
      deploymentConfig: "${APPLICATION_NAME}-amq"
  metadata:
    name: "${APPLICATION_NAME}-amq-amqp"
    labels: 
      application: "${APPLICATION_NAME}"
    annotations:
      description: The broker's AMQP port.
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 1883
      targetPort: 1883
    selector:
      deploymentConfig: "${APPLICATION_NAME}-amq"
  metadata:
    name: "${APPLICATION_NAME}-amq-mqtt"
    labels: 
      application: "${APPLICATION_NAME}"
    annotations:
      description: The broker's MQTT port.
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 61613
      targetPort: 61613
    selector:
      deploymentConfig: "${APPLICATION_NAME}-amq"
  metadata:
    name: "${APPLICATION_NAME}-amq-stomp"
    labels: 
      application: "${APPLICATION_NAME}"
    annotations:
      description: The broker's STOMP port.
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 61616
      targetPort: 61616
    selector:
      deploymentConfig: "${APPLICATION_NAME}-amq"
  metadata:
    name: "${APPLICATION_NAME}-amq-tcp"
    labels: 
      application: "${APPLICATION_NAME}"
    annotations:
      description: The broker's OpenWire port.
      service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-amq-amqp", "kind": "Service"},{"name": "${APPLICATION_NAME}-amq-mqtt", "kind": "Service"},{"name": "${APPLICATION_NAME}-amq-stomp", "kind": "Service"}]'
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: "${APPLICATION_NAME}-rhdmcentr"
  metadata:
    name: "${APPLICATION_NAME}-rhdmcentr"
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: The Decision Central web server's http port.
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: "${APPLICATION_NAME}-rhdmcentr"
  metadata:
    name: secure-${APPLICATION_NAME}-rhdmcentr
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: The Decision Central web server's https port.
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: "${APPLICATION_NAME}-kieserver"
  metadata:
    name: "${APPLICATION_NAME}-kieserver"
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: The KIE server web server's http port.
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: "${APPLICATION_NAME}-kieserver"
  metadata:
    name: secure-${APPLICATION_NAME}-kieserver
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: The KIE server web server's https port.
- kind: Service
  apiVersion: v1
  spec:
    clusterId: None
    ports:
    - name: mesh
      port: 61616
    selector:
      deploymentConfig: "${APPLICATION_NAME}-amq"
  metadata:
    name: "${APPLICATION_NAME}-amq-mesh"
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      description: Supports node discovery for mesh formation.
- kind: Route
  apiVersion: v1
  id: "${APPLICATION_NAME}-rhdmcentr-http"
  metadata:
    name: "${APPLICATION_NAME}-rhdmcentr"
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: Route for Decision Central's http service.
  spec:
    host: "${DECISION_CENTRAL_HOSTNAME_HTTP}"
    to:
      name: "${APPLICATION_NAME}-rhdmcentr"
- kind: Route
  apiVersion: v1
  id: "${APPLICATION_NAME}-rhdmcentr-https"
  metadata:
    name: secure-${APPLICATION_NAME}-rhdmcentr
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: Route for Decision Central's https service.
  spec:
    host: "${DECISION_CENTRAL_HOSTNAME_HTTPS}"
    to:
      name: secure-${APPLICATION_NAME}-rhdmcentr
    tls:
      termination: passthrough
- kind: Route
  apiVersion: v1
  id: "${APPLICATION_NAME}-kieserver-http"
  metadata:
    name: "${APPLICATION_NAME}-kieserver"
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: Route for KIE server's http service.
  spec:
    host: "${EXECUTION_SERVER_HOSTNAME_HTTP}"
    to:
      name: "${APPLICATION_NAME}-kieserver"
- kind: Route
  apiVersion: v1
  id: "${APPLICATION_NAME}-kieserver-https"
  metadata:
    name: secure-${APPLICATION_NAME}-kieserver
    labels:
      application: "${APPLICATION_NAME}"
    annotations:
      description: Route for KIE server's https service.
  spec:
    host: "${EXECUTION_SERVER_HOSTNAME_HTTPS}"
    to:
      name: secure-${APPLICATION_NAME}-kieserver
    tls:
      termination: passthrough
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-amq"
    labels:
      application: "${APPLICATION_NAME}"
  spec: 
    strategy:
      type: Rolling
      rollingParams:
        maxSurge: 0
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}-amq"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: jboss-amq-63:1.2
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "${APPLICATION_NAME}-amq"
    template:
      metadata:
        name: "${APPLICATION_NAME}-amq"
        labels:
          deploymentConfig: "${APPLICATION_NAME}-amq"
          application: "${APPLICATION_NAME}"
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - name: "${APPLICATION_NAME}-amq"
          image: jboss-amq-63
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command: 
              - "/bin/bash"
              - "-c"
              - "/opt/amq/bin/readinessProbe.sh"
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: mqtt
            containerPort: 1883
            protocol: TCP
          - name: stomp
            containerPort: 61613
            protocol: TCP
          - name: tcp
            containerPort: 61616
            protocol: TCP
          env:
          - name: AMQ_USER
            value: "${MQ_USERNAME}"
          - name: AMQ_PASSWORD
            value: "${MQ_PASSWORD}"
          - name: AMQ_TRANSPORTS
            value: "${MQ_PROTOCOL}"
          - name: AMQ_QUEUES
            value: "${MQ_QUEUES}"
          - name: AMQ_TOPICS
            value: "${MQ_TOPICS}"
          - name: MQ_SERIALIZABLE_PACKAGES
            value: "${MQ_SERIALIZABLE_PACKAGES}"
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: "${AMQ_MESH_DISCOVERY_TYPE}"
          - name: AMQ_MESH_SERVICE_NAME
            value: "${APPLICATION_NAME}-amq-mesh"
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom: 
              fieldRef:
                fieldPath: metadata.namespace
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: "${AMQ_STORAGE_USAGE_LIMIT}"
          - name: AMQ_QUEUE_MEMORY_LIMIT
            value: "${AMQ_QUEUE_MEMORY_LIMIT}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-rhdmcentr"
    labels:
      application: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}-rhdmcentr"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: rhdm70-decisioncentral-openshift:1.0
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "${APPLICATION_NAME}-rhdmcentr"
    template:
      metadata:
        name: "${APPLICATION_NAME}-rhdmcentr"
        labels:
          deploymentConfig: "${APPLICATION_NAME}-rhdmcentr"
          application: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: decisioncentral-service-account
        terminationGracePeriodSeconds: 60
        containers:
        - name: "${APPLICATION_NAME}-rhdmcentr"
          image: rhdm70-decisioncentral-openshift
          imagePullPolicy: Always
          volumeMounts:
          - name: decisioncentral-keystore-volume
            mountPath: "/etc/decisioncentral-secret-volume"
            readOnly: true
          - name: "${APPLICATION_NAME}-rhdmcentr-pvol"
            mountPath: "/opt/eap/standalone/data/bpmsuite"
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/eap/bin/livenessProbe.sh"
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/eap/bin/readinessProbe.sh"
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          env:
          - name: KIE_ADMIN_PWD
            value: "${KIE_ADMIN_PWD}"
          - name: KIE_ADMIN_USER
            value: "${KIE_ADMIN_USER}"
          - name: KIE_MBEANS
            value: "${KIE_MBEANS}"
          - name: KIE_SERVER_CONTROLLER_PWD
            value: "${KIE_SERVER_CONTROLLER_PWD}"
          - name: KIE_SERVER_CONTROLLER_USER
            value: "${KIE_SERVER_CONTROLLER_USER}"
          - name: KIE_SERVER_PWD
            value: "${KIE_SERVER_PWD}"
          - name: KIE_SERVER_USER
            value: "${KIE_SERVER_USER}"
          - name: HTTPS_KEYSTORE_DIR
            value: "/etc/decisioncentral-secret-volume"
          - name: HTTPS_KEYSTORE
            value: "${DECISION_CENTRAL_HTTPS_KEYSTORE}"
          - name: HTTPS_NAME
            value: "${DECISION_CENTRAL_HTTPS_NAME}"
          - name: HTTPS_PASSWORD
            value: "${DECISION_CENTRAL_HTTPS_PASSWORD}"
          - name: ADMIN_USERNAME
            value: "${ADMIN_USERNAME}"
          - name: ADMIN_PASSWORD
            value: "${ADMIN_PASSWORD}"
          - name: PROBE_IMPL
            value: probe.eap.jolokia.EapProbe
          - name: PROBE_DISABLE_BOOT_ERRORS_CHECK
            value: 'true'
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            value: "${IMAGE_STREAM_NAMESPACE}"
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: "application=${APPLICATION_NAME}"
          - name: JAVA_OPTS_APPEND
            value: "${JAVA_OPTS_APPEND}"
        volumes:
        - name: decisioncentral-keystore-volume
          secret:
            secretName: "${DECISION_CENTRAL_HTTPS_SECRET}"
        - name: "${APPLICATION_NAME}-rhdmcentr-pvol"
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}-rhdmcentr-claim"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}-kieserver"
    labels:
      application: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}-kieserver"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: rhdm70-kieserver-openshift:1.0
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "${APPLICATION_NAME}-kieserver"
    template:
      metadata:
        name: "${APPLICATION_NAME}-kieserver"
        labels:
          deploymentConfig: "${APPLICATION_NAME}-kieserver"
          application: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: kieserver-service-account
        terminationGracePeriodSeconds: 60
        containers:
        - name: "${APPLICATION_NAME}-kieserver"
          image: rhdm70-kieserver-openshift
          imagePullPolicy: Always
          volumeMounts:
          - name: kieserver-keystore-volume
            mountPath: "/etc/kieserver-secret-volume"
            readOnly: true
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/eap/bin/livenessProbe.sh"
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/eap/bin/readinessProbe.sh"
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          env:
          - name: DROOLS_SERVER_FILTER_CLASSES
            value: "${DROOLS_SERVER_FILTER_CLASSES}"
          - name: KIE_ADMIN_PWD
            value: "${KIE_ADMIN_PWD}"
          - name: KIE_ADMIN_USER
            value: "${KIE_ADMIN_USER}"
          - name: KIE_MBEANS
            value: "${KIE_MBEANS}"
          - name: KIE_SERVER_BYPASS_AUTH_USER
            value: "${KIE_SERVER_BYPASS_AUTH_USER}"
          - name: KIE_SERVER_CONTROLLER_PWD
            value: "${KIE_SERVER_CONTROLLER_PWD}"
          - name: KIE_SERVER_CONTROLLER_SERVICE
            value: "${APPLICATION_NAME}-rhdmcentr"
          - name: KIE_SERVER_CONTROLLER_USER
            value: "${KIE_SERVER_CONTROLLER_USER}"
          - name: KIE_SERVER_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KIE_SERVER_PWD
            value: "${KIE_SERVER_PWD}"
          - name: KIE_SERVER_USER
            value: "${KIE_SERVER_USER}"
          - name: MAVEN_REPO_URL
            value: "${MAVEN_REPO_URL}"
          - name: MAVEN_REPO_SERVICE
            value: "${APPLICATION_NAME}-rhdmcentr"
          - name: MAVEN_REPO_PATH
            value: "/maven2/"
          - name: MAVEN_REPO_USERNAME
            value: "${MAVEN_REPO_USERNAME}"
          - name: MAVEN_REPO_PASSWORD
            value: "${MAVEN_REPO_PASSWORD}"
          - name: HTTPS_KEYSTORE_DIR
            value: "/etc/kieserver-secret-volume"
          - name: HTTPS_KEYSTORE
            value: "${KIE_SERVER_HTTPS_KEYSTORE}"
          - name: HTTPS_NAME
            value: "${KIE_SERVER_HTTPS_NAME}"
          - name: HTTPS_PASSWORD
            value: "${KIE_SERVER_HTTPS_PASSWORD}"
        volumes:
        - name: kieserver-keystore-volume
          secret:
            secretName: "${KIE_SERVER_HTTPS_SECRET}"
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "${APPLICATION_NAME}-rhdmcentr-claim"
    labels:
      application: "${APPLICATION_NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${DECISION_CENTRAL_VOLUME_CAPACITY}"
